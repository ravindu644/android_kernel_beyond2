name: build and release

on:
  workflow_dispatch:
    inputs:      
      tag:
        description: 'Release Tag'
        required: true        

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write    

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install packages & setup
        run: |
          sudo apt update -y        
          sudo apt install wget aria2 default-jdk git-core gnupg flex bison gperf build-essential zip curl libc6-dev libncurses5-dev x11proto-core-dev libx11-dev libreadline6-dev libgl1-mesa-glx libgl1-mesa-dev python3 make sudo gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc zlib1g-dev libncurses5 python-is-python3 libc6-dev libtinfo5 ncurses-dev make python2 repo cpio kmod openssl libelf-dev pahole libssl-dev libelf-dev -y
          bash init_clang_12.sh
          
      - name: Set environment variable
        run: |
          echo "LPOS_KERNEL_VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          
      - name: Building LPoS
        run: |
          export PATH=$HOME/:$PWD/toolchain/proton-clang/bin:$PATH
          bash build_kernel.sh -c

      - name: Building LPoS + KernelSU
        run: |
          export PATH=$HOME/:$PWD/toolchain/proton-clang/bin:$PATH
          bash build_kernel.sh -k          

      - name: Upload kernel
        uses: actions/upload-artifact@v3.1.2
        with:
          name: "LPoS ${{ env.LPOS_KERNEL_VERSION }} [S10 5G]"
          path: |
            out/LPoS*.xz
            out/KSU*.xz

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: "LPoS Kernel ${{ env.LPOS_KERNEL_VERSION }}"
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN }}          
          artifacts: "out/LPoS*.xz,out/KSU*.xz"
          body: "Commit SHA: ${{ github.sha }}"
